
apiVersion: v1
kind: ServiceAccount
metadata:
  name: namespace-watcher-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: namespace-watcher-role
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods"]
    verbs: ["watch", "list", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: namespace-watcher-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: namespace-watcher-role
subjects:
  - kind: ServiceAccount
    name: namespace-watcher-sa
    namespace: namespace-watcher
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: namespace-watcher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: namespace-watcher
  template:
    metadata:
      labels:
        app: namespace-watcher
    spec:
      serviceAccountName: namespace-watcher-sa
      containers:
        - name: namespace-watcher
          image: "${IMAGE_NAME}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: metrics
            - containerPort: 5000
              name: health
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readiness
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
      restartPolicy: Always
            